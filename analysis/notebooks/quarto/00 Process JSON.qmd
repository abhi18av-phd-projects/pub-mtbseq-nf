---
title: "MTBseq-nf"
author: "Gian van der Spuy"
date: last-modified
date-format: D MMMM YYYY
format:
  html:
    page-layout: full
    default-image-extension: svg
    embed-resources: true
execute:
  echo: false
  warning: false
editor: source
---

```{r}
#| echo: false
#| output: false
#| layout-align: left
library(jsonlite)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(patchwork)
library(gridExtra)
library(kableExtra)
library(UpSetR)
library(foreach)
```

```{r}
#| echo: false
json <- fromJSON(txt = "Statistics.json" , flatten=TRUE)

experiments <- names(json$Experiments)

for (experiment in experiments) {
  lists <- lapply(json$Experiments[[experiment]]$statistics, as.list)
  experiment <- gsub('-','_',experiment)
  assign(experiment, as.data.frame(do.call(rbind, lists)))
}

experiments <- sapply(experiments, function(experiment) gsub('-','_',experiment), USE.NAMES = FALSE)

rm(json,lists)

for (experiment in experiments) {
  assign(experiment, data.frame(apply(do.call(cbind, eval(as.symbol(experiment))),2, function(x) unlist(x,use.names = F))))
}


df <- bind_rows(mget(experiments), .id='id')

sampleids <- df |> 
  filter(id == experiment) |> 
  select(SampleID)

rm(experiment,experiments)

rm(list = ls(pattern = '^mtbseq.*'))

numericVars <- as.vector(names(df)[!names(df) %in% c('id','FullID','SampleID','Date','LibraryID')])
df <- cbind(df[c('id','SampleID')],apply(df[numericVars],2,as.numeric))
```

# Compare metrics of Normal runs
```{r fig.width=10,fig.height=5}
#| echo: false
ranges_normal <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  diffs <- df |> 
    filter(id %in% c('pub_90samples_mtbseq_nf_run1','pub_90samples_mtbseq_nf_run2','pub_90samples_mtbseq_nf_run3')) |> 
    group_by(SampleID) |> 
    summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
  diffs[2]
}
names(ranges_normal) <- numericVars

ranges_normal.summary <- apply(ranges_normal,2, function(x) sum(x!=0))
intraNormalVariants <- ranges_normal.summary[which(ranges_normal.summary > 0)]

graphs_normal <- foreach (i=1:length(intraNormalVariants)) %do% {
  variant <- names(intraNormalVariants)[i]
  ranges_normal |>
    select(all_of(variant)) |>
    arrange(.data[[variant]]) |>
    ggplot(aes(x=1:nrow(ranges_normal),y=.data[[variant]])) +
    geom_point() +
    geom_line() +
    theme_grey() +
    ggtitle(variant) +
    theme(axis.title.x = element_blank()) +
    ylab("Difference")
}

do.call("grid.arrange", c(graphs_normal, ncol=3))
```

# Compare metrics of Standard runs
```{r fig.width=10,fig.height=5}
#| echo: false
ranges_normal <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  diffs <- df |> 
    filter(id %in% c('pub_90samples_mtbseq_standard_run1','pub_90samples_mtbseq_standard_run2','pub_90samples_mtbseq_standard_run3')) |> 
    group_by(SampleID) |> 
    summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
  diffs[2]
}
names(ranges_normal) <- numericVars

ranges_normal.summary <- apply(ranges_normal,2, function(x) sum(x!=0))
intraNormalVariants <- ranges_normal.summary[which(ranges_normal.summary > 0)]

graphs_normal <- foreach (i=1:length(intraNormalVariants)) %do% {
  variant <- names(intraNormalVariants)[i]
  ranges_normal |>
    select(all_of(variant)) |>
    arrange(.data[[variant]]) |>
    ggplot(aes(x=1:nrow(ranges_normal),y=.data[[variant]])) +
    geom_point() +
    geom_line() +
    theme_grey() +
    ggtitle(variant) +
    theme(axis.title.x = element_blank()) +
    ylab("Difference")
}

do.call("grid.arrange", c(graphs_normal, ncol=3))
```

# Compare metrics of Parallel runs
```{r fig.width=10,fig.height=10}
#| echo: false
ranges_parallel <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  diffs <- df |> 
    filter(id %in% c('pub_90samples_mtbseq_nf_parallel_run1','pub_90samples_mtbseq_nf_parallel_run2','pub_90samples_mtbseq_nf_parallel_run3')) |> 
    group_by(SampleID) |> 
    summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
  diffs[2]
}
names(ranges_parallel) <- numericVars

ranges_parallel.summary <- apply(ranges_parallel,2, function(x) sum(x!=0))
intraParallelVariants <- ranges_parallel.summary[which(ranges_parallel.summary > 0)]

# graphs_parallel <- foreach (i=1:length(intraParallelVariants)) %do% {
#   variant <- names(intraParallelVariants)[i]
#   ranges_parallel |>
#     select(all_of(variant)) |>
#     arrange(.data[[variant]]) |>
#     ggplot(aes(x=1:nrow(ranges_parallel),y=.data[[variant]])) +
#     geom_point() +
#     geom_line() +
#     theme_grey() +
#     ggtitle(variant) +
#     theme(axis.title.x = element_blank()) +
#     ylab("Difference")
# }
# 
# do.call("grid.arrange", c(graphs_parallel, ncol=3))
```
No variation

# Compare metrics of Normal vs Standard
```{r fig.width=10,fig.height=10}
ranges_docker <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  alldiffs <- foreach(j=1:3, .combine = cbind) %do% {
    diffs <- df |>
      filter(id %in% c(paste0('pub_90samples_mtbseq_nf_run',j),paste0('pub_90samples_mtbseq_standard_run',j))) |>
      group_by(SampleID) |>
      summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
    diffs[2]
  }
  as.data.frame(apply(alldiffs,1,max))
}

names(ranges_docker) <- numericVars

ranges_docker.summary <- apply(ranges_docker,2, function(x) sum(x!=0))
interDockerVariants <- ranges_docker.summary[which(ranges_docker.summary > 0)]

graphs_Docker <- foreach (i=1:length(interDockerVariants)) %do% {
  variant <- names(interDockerVariants)[i]
  ranges_docker |>
    select(all_of(variant)) |>
    arrange(.data[[variant]]) |>
    ggplot(aes(x=1:nrow(ranges_docker),y=.data[[variant]])) +
    geom_point() +
    geom_line() +
    theme_grey() +
    ggtitle(variant) +
    theme(axis.title.x = element_blank()) +
    ylab("Difference")
}

do.call("grid.arrange", c(graphs_Docker, ncol=3))
```

## Normal vs Standard Variant Samples
_(Parameters with fewer than 10 variants)_
```{r fig.width=15}

parameters.of.interest <- ranges_docker.summary[ranges_docker.summary > 0 ]

sampleids |> 
  bind_cols(ranges_docker) |> 
  select(c('SampleID', names(parameters.of.interest))) %>% 
  filter(rowSums(.[,-1]) > 0) |> 
  mutate(across(2:last_col(), function(x) ifelse(x > 0, '●',''))) |> 
  kable(align = "c") |> 
  kable_classic()

```

## UpSet Plot for Parameters Sharing Common Variant Samples
```{r}
ranges_docker |> 
  select(c(names(parameters.of.interest))) %>% 
  filter(rowSums(.) > 0) |> 
  mutate(across(everything(), function(x) ifelse(x > 0,1,0))) |>
  upset()
```

# Compare metrics of Normal vs Parallel
```{r fig.width=10,fig.height=10}
ranges_docker <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  alldiffs <- foreach(j=1:3, .combine = cbind) %do% {
    diffs <- df |>
      filter(id %in% c(paste0('pub_90samples_mtbseq_nf_run',j),paste0('pub_90samples_mtbseq_nf_parallel_run',j))) |>
      group_by(SampleID) |>
      summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
    diffs[2]
  }
  as.data.frame(apply(alldiffs,1,max))
}

names(ranges_docker) <- numericVars

ranges_docker.summary <- apply(ranges_docker,2, function(x) sum(x!=0))
interDockerVariants <- ranges_docker.summary[which(ranges_docker.summary > 0)]

graphs_Docker <- foreach (i=1:length(interDockerVariants)) %do% {
  variant <- names(interDockerVariants)[i]
  ranges_docker |>
    select(all_of(variant)) |>
    arrange(.data[[variant]]) |>
    ggplot(aes(x=1:nrow(ranges_docker),y=.data[[variant]])) +
    geom_point() +
    geom_line() +
    theme_grey() +
    ggtitle(variant) +
    theme(axis.title.x = element_blank()) +
    ylab("Difference")
}

do.call("grid.arrange", c(graphs_Docker, ncol=3))
```

## Normal vs Parallel Variant Samples
_(Parameters with fewer than 10 variants)_
```{r fig.width=15}

parameters.of.interest <- ranges_docker.summary[ranges_docker.summary > 0 ]

sampleids |> 
  bind_cols(ranges_docker) |> 
  select(c('SampleID', names(parameters.of.interest))) %>% 
  filter(rowSums(.[,-1]) > 0) |> 
  mutate(across(2:last_col(), function(x) ifelse(x > 0, '●',''))) |> 
  kable(align = "c") |> 
  kable_classic()

```
## UpSet Plot for Parameters Sharing Common Variant Samples
```{r}
ranges_docker |> 
  select(c(names(parameters.of.interest))) %>% 
  filter(rowSums(.) > 0) |> 
  mutate(across(everything(), function(x) ifelse(x > 0,1,0))) |>
  upset()
```

# Compare metrics of Standard vs Parallel
```{r fig.width=10,fig.height=10}
ranges_docker <- foreach(i=1:length(numericVars), .combine = cbind) %do% {
  alldiffs <- foreach(j=1:3, .combine = cbind) %do% {
    diffs <- df |>
      filter(id %in% c(paste0('pub_90samples_mtbseq_nf_parallel_run',j),paste0('pub_90samples_mtbseq_standard_run',j))) |>
      group_by(SampleID) |>
      summarise(range = max(eval(as.symbol(numericVars[i]))) - min(eval(as.symbol(numericVars[i]))))
    diffs[2]
  }
  as.data.frame(apply(alldiffs,1,max))
}

names(ranges_docker) <- numericVars

ranges_docker.summary <- apply(ranges_docker,2, function(x) sum(x!=0))
interDockerVariants <- ranges_docker.summary[which(ranges_docker.summary > 0)]

graphs_Docker <- foreach (i=1:length(interDockerVariants)) %do% {
  variant <- names(interDockerVariants)[i]
  ranges_docker |>
    select(all_of(variant)) |>
    arrange(.data[[variant]]) |>
    ggplot(aes(x=1:nrow(ranges_docker),y=.data[[variant]])) +
    geom_point() +
    geom_line() +
    theme_grey() +
    ggtitle(variant) +
    theme(axis.title.x = element_blank()) +
    ylab("Difference")
}

do.call("grid.arrange", c(graphs_Docker, ncol=3))
```

## Standard vs Parallel Variant Samples
_(Parameters with fewer than 10 variants)_
```{r fig.width=15}

parameters.of.interest <- ranges_docker.summary[ranges_docker.summary > 0 ]

sampleids |> 
  bind_cols(ranges_docker) |> 
  select(c('SampleID', names(parameters.of.interest))) %>% 
  filter(rowSums(.[,-1]) > 0) |> 
  mutate(across(2:last_col(), function(x) ifelse(x > 0, '●',''))) |> 
  kable(align = "c") |> 
  kable_classic()

```

## UpSet Plot for Parameters Sharing Common Variant Samples
```{r}
ranges_docker |> 
  select(c(names(parameters.of.interest))) %>% 
  filter(rowSums(.) > 0) |> 
  mutate(across(everything(), function(x) ifelse(x > 0,1,0))) |>
  upset()
```